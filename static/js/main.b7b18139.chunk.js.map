{"version":3,"sources":["Components/Tictactoe.js","App.js","reportWebVitals.js","index.js"],"names":["Tictactoe","useState","turn","setTurn","over","setOver","winner","setWinner","withComp","setWithComp","started","setStarted","board","setBoard","createNewGame","handleClick","r","c","copy","checkGameStatus","setTimeout","i","j","console","log","playAutoTurn","onClick","style","pointerEvents","border","borderTop","borderLeft","borderRight","borderBottom","string","getResult","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b18139.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Tictactoe.css';\r\n\r\nfunction Tictactoe() {\r\n\tconst [turn, setTurn] = useState(1);\r\n\tconst [over, setOver] = useState(false);\r\n\tconst [winner, setWinner] = useState(-1);\r\n\tconst [withComp, setWithComp] = useState(false);\r\n\tconst [started, setStarted] = useState(false);\r\n\tconst [board, setBoard] = useState([\r\n\t\t[' ', ' ', ' '],\r\n\t\t[' ', ' ', ' '],\r\n\t\t[' ', ' ', ' ']\r\n\t]);\r\n\t\r\n\tfunction createNewGameWithPlayer() {\r\n\t\tcreateNewGame();\r\n\t}\r\n\tfunction createNewGameWithComputer() {\r\n\t\tcreateNewGame();\r\n\t\tsetWithComp(true);\r\n\t}\r\n\tfunction createNewGame() {\r\n\t\tsetStarted(true);\r\n\t\tlet newBoard = [\r\n\t\t\t[' ', ' ', ' '],\r\n\t\t\t[' ', ' ', ' '],\r\n\t\t\t[' ', ' ', ' ']\r\n\t\t];\r\n\t\tsetBoard(newBoard);\r\n\t\tsetTurn(1);\r\n\t\tsetOver(false);\r\n\t\tsetWinner(-1);\r\n\t\tsetWithComp(false);\r\n\t}\r\n\tfunction handleClick(r, c){\r\n\t\tif(board[r][c] !== ' ')\r\n\t\t\treturn;\r\n\t\tlet copy = [...board];\r\n\t\tif(turn === 1){\r\n\t\t\tcopy[r][c] = '#';\r\n\t\t\tsetTurn(2);\r\n\t\t} else if(turn === 2){\r\n\t\t\tcopy[r][c] = 'O';\r\n\t\t\tsetTurn(1);\r\n\t\t}\r\n\t\tsetBoard(copy);\r\n\t\tcheckGameStatus();\r\n\t\tif(withComp === true && over === false){\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcomputerTurn();\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t}\r\n\tfunction computerTurn() {\r\n\t\tplayAutoTurn();\r\n\t\tsetTurn(1);\r\n\t\tcheckGameStatus();\r\n\t}\r\n\tfunction playAutoTurn() {\r\n\t\tlet copy = [...board];\r\n\t\tfor(let i = 0; i < 3; i++){\r\n\t\t\tif(board[i][0] === ' ' && board[i][1] === board[i][2] && board[i][1] !== ' '){\r\n\t\t\t\tcopy[i][0] = 'O';\r\n\t\t\t\tsetBoard(copy);\r\n\t\t\t\treturn;\r\n\t\t\t} else if(board[i][1] === ' ' && board[i][0] === board[i][2] && board[i][0] !== ' '){\r\n\t\t\t\tcopy[i][1] = 'O';\r\n\t\t\t\tsetBoard(copy);\r\n\t\t\t\treturn;\r\n\t\t\t} else if(board[i][2] === ' ' && board[i][0] === board[i][1] && board[i][0] !== ' '){\r\n\t\t\t\tcopy[i][2] = 'O';\r\n\t\t\t\tsetBoard(copy);\r\n\t\t\t\treturn;\r\n\t\t\t} \r\n\t\t\t\r\n\t\t}\r\n\t\tfor(let i = 0; i < 3; i++){\r\n\t\t\tif(board[0][i] === ' ' && board[1][i] === board[2][i] && board[1][i] !== ' '){\r\n\t\t\t\tcopy[0][i] = 'O';\r\n\t\t\t\tsetBoard(copy);\r\n\t\t\t\treturn;\r\n\t\t\t} else if(board[1][i] === ' ' && board[0][i] === board[2][i] && board[0][i] !== ' '){\r\n\t\t\t\tcopy[1][i] = 'O';\r\n\t\t\t\tsetBoard(copy);\r\n\t\t\t\treturn;\r\n\t\t\t} else if(board[2][i] === ' ' && board[0][i] === board[1][i] && board[0][i] !== ' '){\r\n\t\t\t\tcopy[2][i] = 'O';\r\n\t\t\t\tsetBoard(copy);\r\n\t\t\t\treturn;\r\n\t\t\t} \r\n\t\t\r\n\t\t}\r\n\t\tif(board[0][0] === ' ' && board[1][1] === board[2][2] && board[1][1] !== ' '){\r\n\t\t\tcopy[0][0] = 'O';\r\n\t\t\tsetBoard(copy);\r\n\t\t\treturn;\r\n\t\t} else if(board[1][1] === ' ' && board[0][0] === board[2][2] && board[0][0] !== ' '){\r\n\t\t\tcopy[1][1] = 'O';\r\n\t\t\tsetBoard(copy);\r\n\t\t\treturn;\r\n\t\t} else if(board[2][2] === ' ' && board[0][0] === board[1][1] && board[1][1] !== ' '){\r\n\t\t\tcopy[2][2] = 'O';\r\n\t\t\tsetBoard(copy);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(board[0][2] === ' ' && board[1][1] === board[2][0] && board[1][1] !== ' '){\r\n\t\t\tcopy[0][2] = 'O';\r\n\t\t\tsetBoard(copy);\r\n\t\t\treturn;\r\n\t\t} else if(board[1][1] === ' ' && board[0][2] === board[2][0] && board[0][2] !== ' '){\r\n\t\t\tcopy[1][1] = 'O';\r\n\t\t\tsetBoard(copy);\r\n\t\t\treturn;\r\n\t\t} else if(board[2][0] === ' ' && board[0][2] === board[1][1] && board[1][1] !== ' '){\r\n\t\t\tcopy[2][0] = 'O';\r\n\t\t\tsetBoard(copy);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor(let i = 0; i < 3; i++){\r\n\t\t\tfor(let j = 0; j < 3; j++){\r\n\t\t\t\tif(board[i][j] === ' '){\r\n\t\t\t\t\tconsole.log(\"inside\");\r\n\t\t\t\t\tcopy[i][j] = 'O';\r\n\t\t\t\t\tsetBoard(copy);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction checkGameStatus(){\r\n\t\tfor(let i = 0; i < 3; i++){\r\n            if(board[i][0] !== ' ' && board[i][0] === board[i][1] && board[i][1] === board[i][2]){\r\n                setOver(true);\r\n\t\t\t\tsetWinner(board[i][0] === '#' ? 1 : 2);\r\n                return;\r\n            }\r\n        }\r\n        for(let i = 0; i < 3; i++){\r\n            if(board[0][i] !== ' ' && board[0][i] === board[1][i] && board[1][i] === board[2][i]){\r\n                setOver(true);\r\n\t\t\t\tsetWinner(board[i][0] === '#' ? 1 : 2);\r\n                return;\r\n            }\r\n        }\r\n        if(board[0][0] !== ' ' && board[0][0] === board[1][1] && board[1][1] === board[2][2]){\r\n            setOver(true);\r\n\t\t\tsetWinner(board[0][0] === '#' ? 1 : 2);\r\n\t\t\treturn;\r\n        }\r\n        if(board[0][2] !== ' ' && board[0][2] === board[1][1] && board[1][1] === board[2][0]){\r\n            setOver(true);\r\n\t\t\tsetWinner(board[0][2] === '#' ? 1 : 2);\r\n\t\t\treturn;\r\n        }\r\n        for(let i = 0; i < 3; i++){\r\n            for(let j = 0; j < 3; j++){\r\n                if(board[i][j] === ' '){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\t\tsetOver(true);\r\n\t}\r\n\tfunction getTurn() {\r\n\t\tif(over === true){\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tif(turn === 1){\r\n\t\t\treturn \"Player 1 turn\";\r\n\t\t}\r\n\t\tif(turn === 2){\r\n\t\t\tif(withComp === true){\r\n\t\t\t\treturn \"Computer's turn\";\r\n\t\t\t}\r\n\t\t\treturn \"Player 2 turn\";\r\n\t\t}\r\n\t}\r\n\tfunction getResult() {\r\n\t\tlet string = \"\";\r\n\t\tif(over === true){\r\n\t\t\tstring = string + \"Game over\";\r\n\t\t\tif(winner === 1){\r\n\t\t\t\tstring += \" Winner is Player 1\";\r\n\t\t\t} else if(winner === 2){\r\n\t\t\t\tif(withComp === true){\r\n\t\t\t\t\tstring += \" You lost.\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstring += \" Winner is Player 2\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tstring += \" It's a Draw\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn string;\r\n\t}\r\n    return (\r\n        <div>\r\n            <h1>Welcome to Tic-Tac-Toe</h1>\r\n\t\t\t<button onClick={createNewGameWithPlayer}>Start New Game with 2 players</button>\r\n\t\t\t<button onClick={createNewGameWithComputer}>Start New Game with Computer</button>\r\n            <table style={over === true || started === false ? {pointerEvents:\"none\"} : null}>\r\n                <tbody>\r\n                    <tr>\r\n                        <td onClick={() => handleClick(0,0)}>{board[0][0]}</td>\r\n                        <td onClick={() => handleClick(0,1)} style={{border:\"1px solid black\", borderTop:\"none\"}}>{board[0][1]}</td>\r\n                        <td onClick={() => handleClick(0,2)}>{board[0][2]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td onClick={() => handleClick(1,0)} style={{border:\"1px solid black\", borderLeft:\"none\"}}>{board[1][0]}</td>\r\n                        <td onClick={() => handleClick(1,1)}>{board[1][1]}</td>\r\n                        <td onClick={() => handleClick(1,2)} style={{border:\"1px solid black\", borderRight:\"none\"}}>{board[1][2]}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td onClick={() => handleClick(2,0)}>{board[2][0]}</td>\r\n                        <td onClick={() => handleClick(2,1)} style={{border:\"1px solid black\", borderBottom:\"none\"}}>{board[2][1]}</td>\r\n                        <td onClick={() => handleClick(2,2)}>{board[2][2]}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\t\t\t<h3>{getTurn()}</h3>\r\n\t\t\t<h3>{getResult()}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tictactoe;\r\n","import './App.css';\nimport Tictactoe from './Components/Tictactoe';\n\nfunction App() {\n  return (\n    <div>\n\t\t\t<Tictactoe />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}